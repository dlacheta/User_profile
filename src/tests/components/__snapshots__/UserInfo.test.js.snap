// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`UserInfo component renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <UserInfo
    addFollowerDispatch={[MockFunction]}
    addLikeDispatch={[MockFunction]}
    getUserDispatch={
      [MockFunction] {
        "calls": Array [
          Array [],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      }
    }
    removeFollowerDispatch={[MockFunction]}
    removeLikeDispatch={[MockFunction]}
    shareUrlDispatch={[MockFunction]}
    user={Object {}}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="user-info-container"
        >
          <img
            className="user-img"
            src="user.png"
          />
          <i
            className="material-icons share-icon"
            onClick={[MockFunction]}
          >
            exit_to_app
          </i>
          <div
            className="user-info"
          >
            <h1>
              <i
                alt="Like"
                className="material-icons like-icon"
                onClick={[MockFunction]}
              >
                favorite_border
              </i>
            </h1>
            <h2>
              undefined, undefined
            </h2>
          </div>
        </div>,
        <div
          className="user-follow"
        >
          <div>
            <h3 />
            Likes
          </div>
          <div
            className="follow-divider"
          />
          <div>
            <h3 />
            Following
          </div>
          <div
            className="follow-divider"
          />
          <div>
            <h3 />
            Followers
          </div>
          <button
            className="follow-button"
            onClick={[MockFunction]}
            type="button"
          >
            FOLLOW
          </button>
        </div>,
        <Modal
          ariaHideApp={true}
          bodyOpenClassName="ReactModal__Body--open"
          className="modal"
          closeTimeoutMS={0}
          isOpen={false}
          onRequestClose={[MockFunction]}
          parentSelector={[Function]}
          portalClassName="ReactModalPortal"
          role="dialog"
          shouldCloseOnEsc={true}
          shouldCloseOnOverlayClick={true}
          shouldFocusAfterRender={true}
          shouldReturnFocusAfterClose={true}
        >
          <i
            className="material-icons close-button"
            onClick={[MockFunction]}
          >
            close
          </i>
          <h3
            className="modal__title"
          >
            Copy link below to share:
          </h3>
          http://localhost/
        </Modal>,
      ],
      "className": "user-data",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <img
              className="user-img"
              src="user.png"
            />,
            <i
              className="material-icons share-icon"
              onClick={[MockFunction]}
            >
              exit_to_app
            </i>,
            <div
              className="user-info"
            >
              <h1>
                <i
                  alt="Like"
                  className="material-icons like-icon"
                  onClick={[MockFunction]}
                >
                  favorite_border
                </i>
              </h1>
              <h2>
                undefined, undefined
              </h2>
            </div>,
          ],
          "className": "user-info-container",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "alt": undefined,
              "className": "user-img",
              "src": "user.png",
            },
            "ref": null,
            "rendered": null,
            "type": "img",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "exit_to_app",
              "className": "material-icons share-icon",
              "onClick": [MockFunction],
            },
            "ref": null,
            "rendered": "exit_to_app",
            "type": "i",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <h1>
                  <i
                    alt="Like"
                    className="material-icons like-icon"
                    onClick={[MockFunction]}
                  >
                    favorite_border
                  </i>
                </h1>,
                <h2>
                  undefined, undefined
                </h2>,
              ],
              "className": "user-info",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    undefined,
                    <i
                      alt="Like"
                      className="material-icons like-icon"
                      onClick={[MockFunction]}
                    >
                      favorite_border
                    </i>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  undefined,
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "alt": "Like",
                      "children": "favorite_border",
                      "className": "material-icons like-icon",
                      "onClick": [MockFunction],
                    },
                    "ref": null,
                    "rendered": "favorite_border",
                    "type": "i",
                  },
                ],
                "type": "h1",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "undefined, undefined",
                },
                "ref": null,
                "rendered": "undefined, undefined",
                "type": "h2",
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div>
              <h3 />
              Likes
            </div>,
            <div
              className="follow-divider"
            />,
            <div>
              <h3 />
              Following
            </div>,
            <div
              className="follow-divider"
            />,
            <div>
              <h3 />
              Followers
            </div>,
            <button
              className="follow-button"
              onClick={[MockFunction]}
              type="button"
            >
              FOLLOW
            </button>,
          ],
          "className": "user-follow",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <h3 />,
                "Likes",
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": undefined,
                },
                "ref": null,
                "rendered": null,
                "type": "h3",
              },
              "Likes",
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "follow-divider",
            },
            "ref": null,
            "rendered": null,
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <h3 />,
                "Following",
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": undefined,
                },
                "ref": null,
                "rendered": null,
                "type": "h3",
              },
              "Following",
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "follow-divider",
            },
            "ref": null,
            "rendered": null,
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <h3 />,
                "Followers",
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": undefined,
                },
                "ref": null,
                "rendered": null,
                "type": "h3",
              },
              "Followers",
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "FOLLOW",
              "className": "follow-button",
              "onClick": [MockFunction],
              "type": "button",
            },
            "ref": null,
            "rendered": "FOLLOW",
            "type": "button",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "ariaHideApp": true,
          "bodyOpenClassName": "ReactModal__Body--open",
          "children": Array [
            <i
              className="material-icons close-button"
              onClick={[MockFunction]}
            >
              close
            </i>,
            <h3
              className="modal__title"
            >
              Copy link below to share:
            </h3>,
            "http://localhost/",
          ],
          "className": "modal",
          "closeTimeoutMS": 0,
          "isOpen": false,
          "onRequestClose": [MockFunction],
          "parentSelector": [Function],
          "portalClassName": "ReactModalPortal",
          "role": "dialog",
          "shouldCloseOnEsc": true,
          "shouldCloseOnOverlayClick": true,
          "shouldFocusAfterRender": true,
          "shouldReturnFocusAfterClose": true,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "close",
              "className": "material-icons close-button",
              "onClick": [MockFunction],
            },
            "ref": null,
            "rendered": "close",
            "type": "i",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Copy link below to share:",
              "className": "modal__title",
            },
            "ref": null,
            "rendered": "Copy link below to share:",
            "type": "h3",
          },
          "http://localhost/",
        ],
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="user-info-container"
          >
            <img
              className="user-img"
              src="user.png"
            />
            <i
              className="material-icons share-icon"
              onClick={[MockFunction]}
            >
              exit_to_app
            </i>
            <div
              className="user-info"
            >
              <h1>
                <i
                  alt="Like"
                  className="material-icons like-icon"
                  onClick={[MockFunction]}
                >
                  favorite_border
                </i>
              </h1>
              <h2>
                undefined, undefined
              </h2>
            </div>
          </div>,
          <div
            className="user-follow"
          >
            <div>
              <h3 />
              Likes
            </div>
            <div
              className="follow-divider"
            />
            <div>
              <h3 />
              Following
            </div>
            <div
              className="follow-divider"
            />
            <div>
              <h3 />
              Followers
            </div>
            <button
              className="follow-button"
              onClick={[MockFunction]}
              type="button"
            >
              FOLLOW
            </button>
          </div>,
          <Modal
            ariaHideApp={true}
            bodyOpenClassName="ReactModal__Body--open"
            className="modal"
            closeTimeoutMS={0}
            isOpen={false}
            onRequestClose={[MockFunction]}
            parentSelector={[Function]}
            portalClassName="ReactModalPortal"
            role="dialog"
            shouldCloseOnEsc={true}
            shouldCloseOnOverlayClick={true}
            shouldFocusAfterRender={true}
            shouldReturnFocusAfterClose={true}
          >
            <i
              className="material-icons close-button"
              onClick={[MockFunction]}
            >
              close
            </i>
            <h3
              className="modal__title"
            >
              Copy link below to share:
            </h3>
            http://localhost/
          </Modal>,
        ],
        "className": "user-data",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <img
                className="user-img"
                src="user.png"
              />,
              <i
                className="material-icons share-icon"
                onClick={[MockFunction]}
              >
                exit_to_app
              </i>,
              <div
                className="user-info"
              >
                <h1>
                  <i
                    alt="Like"
                    className="material-icons like-icon"
                    onClick={[MockFunction]}
                  >
                    favorite_border
                  </i>
                </h1>
                <h2>
                  undefined, undefined
                </h2>
              </div>,
            ],
            "className": "user-info-container",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "alt": undefined,
                "className": "user-img",
                "src": "user.png",
              },
              "ref": null,
              "rendered": null,
              "type": "img",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "exit_to_app",
                "className": "material-icons share-icon",
                "onClick": [MockFunction],
              },
              "ref": null,
              "rendered": "exit_to_app",
              "type": "i",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <h1>
                    <i
                      alt="Like"
                      className="material-icons like-icon"
                      onClick={[MockFunction]}
                    >
                      favorite_border
                    </i>
                  </h1>,
                  <h2>
                    undefined, undefined
                  </h2>,
                ],
                "className": "user-info",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      undefined,
                      <i
                        alt="Like"
                        className="material-icons like-icon"
                        onClick={[MockFunction]}
                      >
                        favorite_border
                      </i>,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    undefined,
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "alt": "Like",
                        "children": "favorite_border",
                        "className": "material-icons like-icon",
                        "onClick": [MockFunction],
                      },
                      "ref": null,
                      "rendered": "favorite_border",
                      "type": "i",
                    },
                  ],
                  "type": "h1",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "undefined, undefined",
                  },
                  "ref": null,
                  "rendered": "undefined, undefined",
                  "type": "h2",
                },
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div>
                <h3 />
                Likes
              </div>,
              <div
                className="follow-divider"
              />,
              <div>
                <h3 />
                Following
              </div>,
              <div
                className="follow-divider"
              />,
              <div>
                <h3 />
                Followers
              </div>,
              <button
                className="follow-button"
                onClick={[MockFunction]}
                type="button"
              >
                FOLLOW
              </button>,
            ],
            "className": "user-follow",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <h3 />,
                  "Likes",
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": undefined,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "h3",
                },
                "Likes",
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "follow-divider",
              },
              "ref": null,
              "rendered": null,
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <h3 />,
                  "Following",
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": undefined,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "h3",
                },
                "Following",
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "follow-divider",
              },
              "ref": null,
              "rendered": null,
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <h3 />,
                  "Followers",
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": undefined,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "h3",
                },
                "Followers",
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "FOLLOW",
                "className": "follow-button",
                "onClick": [MockFunction],
                "type": "button",
              },
              "ref": null,
              "rendered": "FOLLOW",
              "type": "button",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "ariaHideApp": true,
            "bodyOpenClassName": "ReactModal__Body--open",
            "children": Array [
              <i
                className="material-icons close-button"
                onClick={[MockFunction]}
              >
                close
              </i>,
              <h3
                className="modal__title"
              >
                Copy link below to share:
              </h3>,
              "http://localhost/",
            ],
            "className": "modal",
            "closeTimeoutMS": 0,
            "isOpen": false,
            "onRequestClose": [MockFunction],
            "parentSelector": [Function],
            "portalClassName": "ReactModalPortal",
            "role": "dialog",
            "shouldCloseOnEsc": true,
            "shouldCloseOnOverlayClick": true,
            "shouldFocusAfterRender": true,
            "shouldReturnFocusAfterClose": true,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "close",
                "className": "material-icons close-button",
                "onClick": [MockFunction],
              },
              "ref": null,
              "rendered": "close",
              "type": "i",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Copy link below to share:",
                "className": "modal__title",
              },
              "ref": null,
              "rendered": "Copy link below to share:",
              "type": "h3",
            },
            "http://localhost/",
          ],
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
